[base]
name = neurom
testdeps =
    pytest>3.0

[tox]
envlist =
    lint
    docs
    coverage
    tutorial
    check-packaging
    py{38,39,310,311,312}

[testenv]
deps =
    {[base]testdeps}
    pytest-cov
    coverage[toml]>=6.3
extras = plotly
commands = python -m pytest \
                --cov={[base]name} \
                --cov-report term-missing \
                --cov-fail-under=100 \
                --cov-report=xml \
                --no-cov-on-fail \
                {posargs}

[testenv:lint]
deps =
    isort
    black
    pycodestyle
    pydocstyle
    astroid
    pylint
commands =
    isort --check-only --diff {[base]name}
    black --check .
    pycodestyle --exclude=tests neurom
    pydocstyle --match-dir='(?!test).*' {toxinidir}/neurom
    pylint --rcfile=pylintrc --extension-pkg-whitelist=numpy --ignore=tests neurom

[testenv:format]
skip_install = true
deps =
    isort
    black
commands =
    isort {[base]name}
    black .

[testenv:docs]
extras = docs
commands =
    # remove autosummary output and cleanup
    rm -rf {toxinidir}/doc/source/_neurom_build {toxinidir}/doc/build/*
    sphinx-build -b doctest \
        {toxinidir}/doc/source \
        {toxinidir}/doc/build/doctest \
        -d {toxinidir}/doc/build/doctrees \
        -W
    sphinx-build -b html \
        {toxinidir}/doc/source \
        {toxinidir}/doc/build/html \
        -d {toxinidir}/doc/build/doctrees \
        -W
allowlist_externals =
    rm

[testenv:tutorial]
changedir = {toxinidir}/tutorial
extras = plotly
deps =
    {[base]testdeps}
    nbmake
    ipywidgets
commands =
    pytest --nbmake .

[testenv:check-packaging]
skip_install = true
deps =
    build
    twine
commands =
    python -m build -o {envtmpdir}/dist
    twine check {envtmpdir}/dist/*

[pycodestyle]
max-line-length=100
# E203,W503 needed for black
ignore = E203,W503

[pydocstyle]
convention = google

[gh-actions]
python =
  3.8: py38, lint
  3.9: py39, docs
  3.10: py310, tutorial
  3.11: py311, check-packaging
  3.12: py312
